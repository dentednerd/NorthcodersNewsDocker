{"ast":null,"code":"var _jsxFileName = \"/Users/joanneimlay/Projects/NCNews-FE/src/components/pages/TopicPage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport ArticleCard from '../molecules/ArticleCard';\nimport WhiteTitle from '../atoms/WhiteTitle';\nimport * as actions from '../../actions/actions';\n\nclass TopicPage extends React.Component {\n  componentDidMount() {\n    this.props.fetchArticles();\n  }\n\n  render() {\n    if (!this.props.articles) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"No articles!\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(WhiteTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.match.params.topic_id), this.props.articles.filter(article => {\n      return article.belongs_to === this.props.match.params.topic_id;\n    }).map(article => React.createElement(ArticleCard, {\n      key: article._id,\n      article: article,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchArticles: () => {\n      dispatch(actions.fetchArticles());\n    }\n  };\n}\n\nfunction MapStateToProps(state) {\n  return {\n    articles: state.articles,\n    loading: state.loading\n  };\n}\n\nTopicPage.propTypes = {\n  fetchArticles: PropTypes.func.isRequired,\n  articles: PropTypes.array.isRequired,\n  match: PropTypes.object.isRequired\n};\nexport default connect(MapStateToProps, mapDispatchToProps)(TopicPage);","map":{"version":3,"sources":["/Users/joanneimlay/Projects/NCNews-FE/src/components/pages/TopicPage.js"],"names":["React","PropTypes","connect","styled","ArticleCard","WhiteTitle","actions","TopicPage","Component","componentDidMount","props","fetchArticles","render","articles","match","params","topic_id","filter","article","belongs_to","map","_id","mapDispatchToProps","dispatch","MapStateToProps","state","loading","propTypes","func","isRequired","array","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAEA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,KAAL,CAAWC,aAAX;AACD;;AAGDC,EAAAA,MAAM,GAAI;AACR,QAAI,CAAC,KAAKF,KAAL,CAAWG,QAAhB,EAA0B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAC1B,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,QAArC,CADF,EAEG,KAAKN,KAAL,CAAWG,QAAX,CAAoBI,MAApB,CAA2BC,OAAO,IAAI;AACrC,aAAOA,OAAO,CAACC,UAAR,KAAuB,KAAKT,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,QAAtD;AACD,KAFA,EAGAI,GAHA,CAGIF,OAAO,IAAI,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,OAAO,CAACG,GAA1B;AAA+B,MAAA,OAAO,EAAEH,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHf,CAFH,CADF;AASD;;AAjBqC;;AAoBxC,SAASI,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAO;AACLZ,IAAAA,aAAa,EAAE,MAAM;AACnBY,MAAAA,QAAQ,CAACjB,OAAO,CAACK,aAAR,EAAD,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,SAASa,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLZ,IAAAA,QAAQ,EAAEY,KAAK,CAACZ,QADX;AAELa,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,GAAP;AAID;;AAEDnB,SAAS,CAACoB,SAAV,GAAsB;AACpBhB,EAAAA,aAAa,EAACV,SAAS,CAAC2B,IAAV,CAAeC,UADT;AAEpBhB,EAAAA,QAAQ,EAACZ,SAAS,CAAC6B,KAAV,CAAgBD,UAFL;AAGpBf,EAAAA,KAAK,EAAEb,SAAS,CAAC8B,MAAV,CAAiBF;AAHJ,CAAtB;AAMA,eAAe3B,OAAO,CAACsB,eAAD,EAAkBF,kBAAlB,CAAP,CAA8Cf,SAA9C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport styled from 'styled-components';\nimport ArticleCard from '../molecules/ArticleCard';\nimport WhiteTitle from '../atoms/WhiteTitle';\nimport * as actions from '../../actions/actions';\n\nclass TopicPage extends React.Component {\n  componentDidMount () {\n    this.props.fetchArticles();\n  }\n\n  \n  render () {\n    if (!this.props.articles) return <p>No articles!</p>;\n    return (\n      <div>\n        <WhiteTitle>{this.props.match.params.topic_id}</WhiteTitle>\n        {this.props.articles.filter(article => {\n          return article.belongs_to === this.props.match.params.topic_id;\n        })       \n        .map(article => <ArticleCard key={article._id} article={article} />)}\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    fetchArticles: () => {\n      dispatch(actions.fetchArticles());\n    }\n  };\n}\n\nfunction MapStateToProps (state) {\n  return {\n    articles: state.articles,\n    loading :state.loading\n  };\n}\n\nTopicPage.propTypes = {\n  fetchArticles:PropTypes.func.isRequired,\n  articles:PropTypes.array.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default connect(MapStateToProps, mapDispatchToProps) (TopicPage);\n"]},"metadata":{},"sourceType":"module"}