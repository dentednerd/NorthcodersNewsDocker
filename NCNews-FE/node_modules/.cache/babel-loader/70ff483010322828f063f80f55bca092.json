{"ast":null,"code":"var _jsxFileName = \"/Users/joanneimlay/Projects/ncnews-fe-new/src/components/Comment.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\nimport * as actions from '../actions/actions';\nconst StyledComment = styled.section`\n  margin-bottom: 1rem;\n  border-radius: 5px;\n  border: solid 1px #ddd;\n  box-shadow: 1px 1px 3px #eee;\n  background-color: #fff;\n  padding: 1rem;\n  overflow: hidden;\n  word-wrap: break-word;\n\n  h3, p {\n    margin: 0;\n  }\n`;\n\nclass Comment extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return nextProps.user.username !== this.props.user.username;\n  }\n\n  componentDidUpdate() {\n    this.props.fetchUser(this.props.comment.created_by);\n  }\n\n  render() {\n    const time = dayjs(this.props.comment.created_at).format('HH:mm DD MM YYYY');\n    console.log('Comment > this.props.user:', this.props.user);\n    return React.createElement(StyledComment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.comment.created_by, \" says:\"), React.createElement(\"p\", {\n      className: \"commentBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.comment.body), React.createElement(\"span\", {\n      className: \"commentInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Posted at \", time, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), \"Votes: \", this.props.comment.votes, \" \"));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchUser: username => {\n      console.log(`fetching user ${username}...`);\n      dispatch(actions.fetchUser(username));\n    }\n  };\n}\n\nfunction MapStateToProps(state) {\n  return {\n    user: state.user,\n    loading: state.loading\n  };\n}\n\nComment.defaultProps = {\n  user: {\n    id: \"\",\n    name: \"\",\n    username: \"\",\n    avatar: \"\"\n  }\n};\nComment.propTypes = {\n  comment: PropTypes.object.isRequired,\n  user: PropTypes.object\n};\nexport default connect(MapStateToProps, mapDispatchToProps)(Comment);","map":{"version":3,"sources":["/Users/joanneimlay/Projects/ncnews-fe-new/src/components/Comment.js"],"names":["React","connect","PropTypes","styled","dayjs","actions","StyledComment","section","Comment","Component","shouldComponentUpdate","nextProps","user","username","props","componentDidUpdate","fetchUser","comment","created_by","render","time","created_at","format","console","log","body","votes","mapDispatchToProps","dispatch","MapStateToProps","state","loading","defaultProps","id","name","avatar","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AAEA,MAAMC,aAAa,GAAGH,MAAM,CAACI,OAAQ;;;;;;;;;;;;;CAArC;;AAeA,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAsC;AACpCC,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC/B,WAAOA,SAAS,CAACC,IAAV,CAAeC,QAAf,KAA4B,KAAKC,KAAL,CAAWF,IAAX,CAAgBC,QAAnD;AACD;;AAEDE,EAAAA,kBAAkB,GAAG;AACnB,SAAKD,KAAL,CAAWE,SAAX,CAAqB,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,UAAxC;AACD;;AAEDC,EAAAA,MAAM,GAAI;AACR,UAAMC,IAAI,GAAGhB,KAAK,CAAC,KAAKU,KAAL,CAAWG,OAAX,CAAmBI,UAApB,CAAL,CAAqCC,MAArC,CAA4C,kBAA5C,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0C,KAAKV,KAAL,CAAWF,IAArD;AACA,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKE,KAAL,CAAWG,OAAX,CAAmBC,UAAxB,WADF,EAEE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKJ,KAAL,CAAWG,OAAX,CAAmBQ,IAA/C,CAFF,EAGE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAyCL,IAAzC,EAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9C,aACU,KAAKN,KAAL,CAAWG,OAAX,CAAmBS,KAD7B,MAHF,CADF;AAQD;;AApBmC;;AAuBtC,SAASC,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAO;AACLZ,IAAAA,SAAS,EAAGH,QAAD,IAAc;AACvBU,MAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBX,QAAS,KAAtC;AACAe,MAAAA,QAAQ,CAACvB,OAAO,CAACW,SAAR,CAAkBH,QAAlB,CAAD,CAAR;AACD;AAJI,GAAP;AAMD;;AAED,SAASgB,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLlB,IAAAA,IAAI,EAAEkB,KAAK,CAAClB,IADP;AAELmB,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,GAAP;AAID;;AAEDvB,OAAO,CAACwB,YAAR,GAAuB;AACrBpB,EAAAA,IAAI,EAAE;AACJqB,IAAAA,EAAE,EAAE,EADA;AAEJC,IAAAA,IAAI,EAAE,EAFF;AAGJrB,IAAAA,QAAQ,EAAE,EAHN;AAIJsB,IAAAA,MAAM,EAAE;AAJJ;AADe,CAAvB;AASA3B,OAAO,CAAC4B,SAAR,GAAoB;AAClBnB,EAAAA,OAAO,EAAEf,SAAS,CAACmC,MAAV,CAAiBC,UADR;AAElB1B,EAAAA,IAAI,EAAEV,SAAS,CAACmC;AAFE,CAApB;AAKA,eAAepC,OAAO,CAAC4B,eAAD,EAAkBF,kBAAlB,CAAP,CAA8CnB,OAA9C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\nimport * as actions from '../actions/actions';\n\nconst StyledComment = styled.section`\n  margin-bottom: 1rem;\n  border-radius: 5px;\n  border: solid 1px #ddd;\n  box-shadow: 1px 1px 3px #eee;\n  background-color: #fff;\n  padding: 1rem;\n  overflow: hidden;\n  word-wrap: break-word;\n\n  h3, p {\n    margin: 0;\n  }\n`;\n\nclass Comment extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return nextProps.user.username !== this.props.user.username;\n  }\n  \n  componentDidUpdate() {\n    this.props.fetchUser(this.props.comment.created_by);\n  }\n\n  render () {\n    const time = dayjs(this.props.comment.created_at).format('HH:mm DD MM YYYY');\n    console.log('Comment > this.props.user:', this.props.user);\n    return (\n      <StyledComment>\n        <h3>{this.props.comment.created_by} says:</h3>\n        <p className=\"commentBody\">{this.props.comment.body}</p>\n        <span className=\"commentInfo\">Posted at {time}<br />\n          Votes: {this.props.comment.votes} </span>\n      </StyledComment>\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    fetchUser: (username) => {\n      console.log(`fetching user ${username}...`);\n      dispatch(actions.fetchUser(username));\n    },\n  };\n}\n\nfunction MapStateToProps (state) {\n  return {\n    user: state.user,\n    loading: state.loading\n  };\n}\n\nComment.defaultProps = {\n  user: {\n    id: \"\",\n    name: \"\",\n    username: \"\",\n    avatar: \"\"\n  }\n}\n\nComment.propTypes = {\n  comment: PropTypes.object.isRequired,\n  user: PropTypes.object\n};\n\nexport default connect(MapStateToProps, mapDispatchToProps) (Comment);\n"]},"metadata":{},"sourceType":"module"}