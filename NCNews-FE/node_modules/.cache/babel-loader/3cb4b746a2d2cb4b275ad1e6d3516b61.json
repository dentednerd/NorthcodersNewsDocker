{"ast":null,"code":"var _jsxFileName = \"/Users/joanneimlay/Projects/ncnews-fe-new/src/components/organisms/Profile.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\nimport * as actions from '../../actions/actions';\nconst StyledSection = styled.section`\n  background-color: #fff;\n  border-radius: 1rem;\n  border: solid 1px #ddd;\n  padding: 1rem;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  margin-bottom: 1rem;\n\n  img {\n    width: 5rem;\n    height: 5rem;\n    border-radius: 2.5rem;\n    margin-right: 1rem;\n  }\n\n  h2, p {\n    margin: 0;\n  }\n`;\nconst ProfileName = styled.div`\n  height: 5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nclass Profile extends React.Component {\n  componentDidMount() {\n    this.props.fetchAllUsers();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.users !== this.props.users;\n  }\n\n  render() {\n    console.log('Profile > this.props.users:', this.props.users);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(StyledSection, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://avatars3.githubusercontent.com/u/6791502?v=3&s=200\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(ProfileName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Awesome Northcoder\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"northcoder\"))), React.createElement(StyledSection, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Welcome, Awesome Northcoder! It's \", dayjs().format('MMMM DD, YYYY'), \".\")), React.createElement(StyledSection, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"search\",\n      className: \"input\",\n      type: \"text\",\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchAllUsers: () => {\n      dispatch(actions.fetchAllUsers());\n    }\n  };\n}\n\nfunction MapStateToProps(state) {\n  return {\n    users: state.allUsers,\n    loading: state.loading\n  };\n}\n\nexport default connect(MapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/Users/joanneimlay/Projects/ncnews-fe-new/src/components/organisms/Profile.js"],"names":["React","connect","styled","dayjs","actions","StyledSection","section","ProfileName","div","Profile","Component","componentDidMount","props","fetchAllUsers","shouldComponentUpdate","nextProps","users","render","console","log","format","mapDispatchToProps","dispatch","MapStateToProps","state","allUsers","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAEA,MAAMC,aAAa,GAAGH,MAAM,CAACI,OAAQ;;;;;;;;;;;;;;;;;;;;;CAArC;AAuBA,MAAMC,WAAW,GAAGL,MAAM,CAACM,GAAI;;;;;;CAA/B;;AAQA,MAAMC,OAAN,SAAsBT,KAAK,CAACU,SAA5B,CAAsC;AACpCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,aAAX;AACD;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC/B,WAAOA,SAAS,CAACC,KAAV,KAAoB,KAAKJ,KAAL,CAAWI,KAAtC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C,KAAKP,KAAL,CAAWI,KAAtD;AACA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAC,4DAAT;AAAsE,MAAA,GAAG,EAAC,EAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CAFF,CADF,EAQE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAsCb,KAAK,GAAGiB,MAAR,CAAe,eAAf,CAAtC,MADF,CARF,EAWE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,EAAE,EAAC,QAAV;AAAmB,MAAA,SAAS,EAAC,OAA7B;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAiD,MAAA,WAAW,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF,CAXF,CADF;AAuBD;;AAlCmC;;AAqCtC,SAASC,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAO;AACLT,IAAAA,aAAa,EAAE,MAAM;AACnBS,MAAAA,QAAQ,CAAClB,OAAO,CAACS,aAAR,EAAD,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,SAASU,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLR,IAAAA,KAAK,EAAEQ,KAAK,CAACC,QADR;AAELC,IAAAA,OAAO,EAAEF,KAAK,CAACE;AAFV,GAAP;AAID;;AAED,eAAezB,OAAO,CAACsB,eAAD,EAAkBF,kBAAlB,CAAP,CAA8CZ,OAA9C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\nimport * as actions from '../../actions/actions';\n\nconst StyledSection = styled.section`\n  background-color: #fff;\n  border-radius: 1rem;\n  border: solid 1px #ddd;\n  padding: 1rem;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  margin-bottom: 1rem;\n\n  img {\n    width: 5rem;\n    height: 5rem;\n    border-radius: 2.5rem;\n    margin-right: 1rem;\n  }\n\n  h2, p {\n    margin: 0;\n  }\n`;\n\nconst ProfileName = styled.div`\n  height: 5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nclass Profile extends React.Component {\n  componentDidMount() {\n    this.props.fetchAllUsers();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.users !== this.props.users;\n  }\n\n  render() {\n    console.log('Profile > this.props.users:', this.props.users);\n    return (\n      <React.Fragment>\n        <StyledSection>\n          <img src=\"https://avatars3.githubusercontent.com/u/6791502?v=3&s=200\" alt=\"\" />\n          <ProfileName>\n            <h2>Awesome Northcoder</h2>\n            <p>northcoder</p>\n          </ProfileName>\n        </StyledSection>\n        <StyledSection>\n          <p>Welcome, Awesome Northcoder! It's {dayjs().format('MMMM DD, YYYY')}.</p>\n        </StyledSection>\n        <StyledSection>\n          <form>\n            <div className=\"search\">\n              <div className=\"control\">\n                <input id=\"search\" className=\"input\" type=\"text\" placeholder=\"Search\" />\n              </div>\n            </div>\n          </form>\n        </StyledSection>\n      </React.Fragment>\n    )\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    fetchAllUsers: () => {\n      dispatch(actions.fetchAllUsers());\n    },\n  };\n}\n\nfunction MapStateToProps (state) {\n  return {\n    users: state.allUsers,\n    loading: state.loading\n  };\n}\n\nexport default connect(MapStateToProps, mapDispatchToProps) (Profile);\n"]},"metadata":{},"sourceType":"module"}