{"ast":null,"code":"var _jsxFileName = \"/Users/joanneimlay/Projects/ncnews-fe-new/src/components/ArticlePage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ArticleTitleBar from './atoms/ArticleTitleBar';\nimport ArticleText from './atoms/ArticleText';\nimport VoteButton from './VoteButton';\nimport NewComment from './NewComment';\nimport CommentList from './CommentList';\nimport Byline from './molecules/Byline';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport '../style.css';\nconst Article = styled.article`\n  background-color: #fff;\n  padding: 1rem;\n\n  h2, p {\n    margin: 0;\n  }\n`;\n\nclass ArticlePage extends React.Component {\n  componentDidMount() {\n    this.props.fetchArticlesByID(this.props.match.params.article_id);\n    this.props.fetchCommentsByArticleID(this.props.match.params.article_id);\n  }\n\n  render() {\n    console.log('user:', this.props.selectedArticle.created_by);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Article, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(ArticleTitleBar, {\n      title: this.props.selectedArticle.title,\n      author: this.props.selectedArticle.created_by,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Byline, {\n      username: this.props.selectedArticle.created_by,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(ArticleText, {\n      body: this.props.selectedArticle.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"voteAndComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(VoteButton, {\n      votes: this.props.selectedArticle.votes,\n      id: this.props.match.params.article_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(NewComment, {\n      postComment: this.props.addCommentsByArticleID,\n      article_id: this.props.match.params.article_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(CommentList, {\n      selectedComments: this.props.selectedComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchArticlesByID: id => {\n      dispatch(actions.fetchArticlesByID(id));\n    },\n    fetchCommentsByArticleID: id => {\n      dispatch(actions.fetchCommentsByArticleID(id));\n    },\n    addCommentsByArticleID: (id, data) => {\n      dispatch(actions.addCommentsByArticleID(id, data));\n    }\n  };\n}\n\nfunction MapStateToProps(state) {\n  return {\n    selectedArticle: state.selectedArticle,\n    selectedComments: state.selectedComments\n  };\n}\n\nArticlePage.defaultProps = {\n  selectedArticle: {},\n  selectedComments: []\n};\nArticlePage.propTypes = {\n  selectedArticle: PropTypes.object,\n  selectedComments: PropTypes.array,\n  fetchArticlesByID: PropTypes.func.isRequired,\n  fetchCommentsByArticleID: PropTypes.func.isRequired,\n  addCommentsByArticleID: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired\n};\nexport default connect(MapStateToProps, mapDispatchToProps)(ArticlePage);","map":{"version":3,"sources":["/Users/joanneimlay/Projects/ncnews-fe-new/src/components/ArticlePage.js"],"names":["React","PropTypes","styled","ArticleTitleBar","ArticleText","VoteButton","NewComment","CommentList","Byline","connect","actions","Article","article","ArticlePage","Component","componentDidMount","props","fetchArticlesByID","match","params","article_id","fetchCommentsByArticleID","render","console","log","selectedArticle","created_by","title","body","votes","addCommentsByArticleID","selectedComments","mapDispatchToProps","dispatch","id","data","MapStateToProps","state","defaultProps","propTypes","object","array","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ArticleTitleBar from './atoms/ArticleTitleBar';\nimport ArticleText from './atoms/ArticleText';\nimport VoteButton from './VoteButton';\nimport NewComment from './NewComment';\nimport CommentList from './CommentList';\nimport Byline from './molecules/Byline';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport '../style.css';\n\nconst Article = styled.article`\n  background-color: #fff;\n  padding: 1rem;\n\n  h2, p {\n    margin: 0;\n  }\n`;\n\nclass ArticlePage extends React.Component {\n  componentDidMount () {\n    this.props.fetchArticlesByID(this.props.match.params.article_id);\n    this.props.fetchCommentsByArticleID(this.props.match.params.article_id);\n    \n  }\n\n  render () {\n    console.log('user:', this.props.selectedArticle.created_by);\n    return (\n      <div>\n        <Article>\n          <ArticleTitleBar \n            title={this.props.selectedArticle.title}\n            author={this.props.selectedArticle.created_by} \n          />\n          <Byline username={this.props.selectedArticle.created_by} />\n          <ArticleText \n            body={this.props.selectedArticle.body} \n          />\n        </Article>\n          <hr />\n          <div className=\"voteAndComment\">\n            <VoteButton \n              votes={this.props.selectedArticle.votes} \n              id={this.props.match.params.article_id}\n            />\n            <NewComment \n              postComment={this.props.addCommentsByArticleID}\n              article_id={this.props.match.params.article_id} \n            />\n          </div>\n          <hr />\n            <CommentList \n              selectedComments={this.props.selectedComments} \n            />               \n        </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    fetchArticlesByID: (id) => {\n      dispatch(actions.fetchArticlesByID(id));\n    },\n    fetchCommentsByArticleID: (id) => {\n      dispatch(actions.fetchCommentsByArticleID(id));  \n    },\n    addCommentsByArticleID: (id, data) => {\n        dispatch(actions.addCommentsByArticleID(id, data));\n    }\n  };\n}\n\nfunction MapStateToProps (state) {\n  return {\n    selectedArticle: state.selectedArticle,\n    selectedComments: state.selectedComments\n  };\n}\n\nArticlePage.defaultProps = {\n  selectedArticle: {},\n  selectedComments: []\n}\n\nArticlePage.propTypes = {\n    selectedArticle: PropTypes.object,\n    selectedComments: PropTypes.array,\n    fetchArticlesByID: PropTypes.func.isRequired,\n    fetchCommentsByArticleID: PropTypes.func.isRequired,\n    addCommentsByArticleID: PropTypes.func.isRequired,\n    match: PropTypes.object.isRequired\n};\n\nexport default connect(MapStateToProps, mapDispatchToProps) (ArticlePage);\n"]},"metadata":{},"sourceType":"module"}