{"ast":null,"code":"var _jsxFileName = \"/Users/joanneimlay/Projects/ncnews-fe-new/src/components/TopicPage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArticleCard from './ArticleCard';\nimport Profile from './organisms/Profile';\nimport * as actions from '../actions/actions'; // TODO: filter articles by topic\n\nclass TopicPage extends React.Component {\n  componentDidMount() {\n    this.props.fetchArticles();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.articles.filter(article => {\n      return article.belongs_to === this.props.match.params.topic_id;\n    }).map(article => React.createElement(ArticleCard, {\n      title: article.title,\n      author: article.created_by,\n      votes: article.votes,\n      key: article.title,\n      topic: article.belongs_to,\n      article_id: article._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchArticles: () => {\n      dispatch(actions.fetchArticles());\n    }\n  };\n}\n\nfunction MapStateToProps(state) {\n  return {\n    articles: state.articles,\n    loading: state.loading\n  };\n}\n\nTopicPage.propTypes = {\n  fetchArticles: PropTypes.func.isRequired,\n  articles: PropTypes.array.isRequired,\n  match: PropTypes.object.isRequired\n};\nexport default connect(MapStateToProps, mapDispatchToProps)(TopicPage);","map":{"version":3,"sources":["/Users/joanneimlay/Projects/ncnews-fe-new/src/components/TopicPage.js"],"names":["React","PropTypes","connect","ArticleCard","Profile","actions","TopicPage","Component","componentDidMount","props","fetchArticles","render","articles","filter","article","belongs_to","match","params","topic_id","map","title","created_by","votes","_id","mapDispatchToProps","dispatch","MapStateToProps","state","loading","propTypes","func","isRequired","array","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB,C,CAEA;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,KAAL,CAAWC,aAAX;AACD;;AAEDC,EAAAA,MAAM,GAAI;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,MAApB,CAA2BC,OAAO,IAAI;AACrC,aAAOA,OAAO,CAACC,UAAR,KAAuB,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,QAAtD;AACD,KAFA,EAGAC,GAHA,CAGIL,OAAO,IAAI,oBAAC,WAAD;AACd,MAAA,KAAK,EAAEA,OAAO,CAACM,KADD;AAEd,MAAA,MAAM,EAAEN,OAAO,CAACO,UAFF;AAGd,MAAA,KAAK,EAAEP,OAAO,CAACQ,KAHD;AAId,MAAA,GAAG,EAAER,OAAO,CAACM,KAJC;AAKd,MAAA,KAAK,EAAEN,OAAO,CAACC,UALD;AAMd,MAAA,UAAU,EAAED,OAAO,CAACS,GANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHf,CADH,CADF;AAeD;;AArBqC;;AAwBxC,SAASC,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAO;AACLf,IAAAA,aAAa,EAAE,MAAM;AACnBe,MAAAA,QAAQ,CAACpB,OAAO,CAACK,aAAR,EAAD,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,SAASgB,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLf,IAAAA,QAAQ,EAAEe,KAAK,CAACf,QADX;AAELgB,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,GAAP;AAID;;AAEDtB,SAAS,CAACuB,SAAV,GAAsB;AACpBnB,EAAAA,aAAa,EAACT,SAAS,CAAC6B,IAAV,CAAeC,UADT;AAEpBnB,EAAAA,QAAQ,EAACX,SAAS,CAAC+B,KAAV,CAAgBD,UAFL;AAGpBf,EAAAA,KAAK,EAAEf,SAAS,CAACgC,MAAV,CAAiBF;AAHJ,CAAtB;AAMA,eAAe7B,OAAO,CAACwB,eAAD,EAAkBF,kBAAlB,CAAP,CAA8ClB,SAA9C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport ArticleCard from './ArticleCard';\nimport Profile from './organisms/Profile';\nimport * as actions from '../actions/actions';\n\n// TODO: filter articles by topic\n\nclass TopicPage extends React.Component {\n  componentDidMount () {\n    this.props.fetchArticles();\n  }\n\n  render () {\n    return (\n      <div>\n        {this.props.articles.filter(article => {\n          return article.belongs_to === this.props.match.params.topic_id;\n        })       \n        .map(article => <ArticleCard \n          title={article.title}\n          author={article.created_by}\n          votes={article.votes} \n          key={article.title}\n          topic={article.belongs_to} \n          article_id={article._id}\n        />)}\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    fetchArticles: () => {\n      dispatch(actions.fetchArticles());\n    }\n  };\n}\n\nfunction MapStateToProps (state) {\n  return {\n    articles: state.articles,\n    loading :state.loading\n  };\n}\n\nTopicPage.propTypes = {\n  fetchArticles:PropTypes.func.isRequired,\n  articles:PropTypes.array.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default connect(MapStateToProps, mapDispatchToProps) (TopicPage);\n"]},"metadata":{},"sourceType":"module"}