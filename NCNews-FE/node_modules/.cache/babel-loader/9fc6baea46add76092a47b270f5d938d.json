{"ast":null,"code":"var _jsxFileName = \"/Users/joanneimlay/Projects/NCNews-FE/src/components/NewComment.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions/actions';\n\nclass NewComment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: {\n        value: '',\n        touched: false\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"newComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Leave your comment:\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"comment-input\",\n      className: \"input\",\n      type: \"text\",\n      placeholder: \"Comment\",\n      onChange: this.handleChange.bind(null, 'comment'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"submitButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n  handleChange(field, e) {\n    e.preventDefault();\n    const newState = Object.assign({}, this.state, {\n      [field]: {\n        value: e.target.value,\n        touched: true\n      }\n    });\n    this.setState(Object.assign(newState));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let data = {\n      comment: this.state.comment.value\n    };\n    this.props.postComment(this.props.article_id, data);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    postComment: function (id, newComment) {\n      dispatch(actions.addCommentsByArticleID(id, newComment));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    comment: state.comment\n  };\n}\n\nNewComment.propTypes = {\n  article_id: PropTypes.string.isRequired,\n  postComment: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewComment);","map":{"version":3,"sources":["/Users/joanneimlay/Projects/NCNews-FE/src/components/NewComment.js"],"names":["React","connect","PropTypes","actions","NewComment","Component","constructor","props","state","comment","value","touched","handleChange","bind","handleSubmit","render","field","e","preventDefault","newState","Object","assign","target","setState","event","data","postComment","article_id","mapDispatchToProps","dispatch","id","newComment","addCommentsByArticleID","mapStateToProps","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions/actions';\n\nclass NewComment extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      comment: {\n        value: '',\n        touched: false\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render () {\n    return (\n      <div className=\"newComment\">\n        <h3>Leave your comment:</h3>\n        <form onSubmit={this.handleSubmit}>\n\n          <div className=\"field comment\">\n            <div className=\"control\">\n              <input id=\"comment-input\" className=\"input\" type=\"text\" placeholder=\"Comment\" onChange={this.handleChange.bind(null, 'comment')} />\n            </div>\n          </div>\n\n          <button className=\"submitButton\" type=\"submit\">\n          Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n  \n  handleChange (field, e) {\n    e.preventDefault();\n    const newState = Object.assign({}, this.state, {\n      [field]: {\n        value: e.target.value,\n        touched: true\n      }\n    });\n    this.setState(Object.assign(newState));\n  }\n\n  handleSubmit (event) {\n    event.preventDefault();\n    let data = {comment: this.state.comment.value};\n    this.props.postComment(this.props.article_id, data);\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    postComment: function (id, newComment) {\n      dispatch(actions.addCommentsByArticleID(id, newComment));\n    }\n  };\n}\n\nfunction mapStateToProps (state) {\n  return {\n    comment: state.comment\n  };\n}\n\nNewComment.propTypes = {\n  article_id: PropTypes.string.isRequired,\n  postComment: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewComment);\n"]},"metadata":{},"sourceType":"module"}