{"ast":null,"code":"var _jsxFileName = \"/Users/joanneimlay/Projects/NCNews-FE/src/components/pages/UserPage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/actions';\nimport Profile from '../organisms/Profile';\n\nclass UserPage extends React.Component {\n  componentDidMount() {\n    this.props.fetchUser(this.props.match.params.user_id);\n    this.props.fetchArticlesByUser(this.props.match.params.user_id);\n    this.props.fetchCommentsByUser(this.props.match.params.user_id);\n  }\n\n  render() {\n    return React.createElement(Profile, {\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchUser: id => {\n      dispatch(actions.fetchUser(id));\n    },\n    fetchArticlesByUser: id => {\n      dispatch(actions.fetchArticlesByUser(id));\n    },\n    fetchCommentsByUser: id => {\n      dispatch(actions.fetchCommentsByUser(id));\n    }\n  };\n}\n\nfunction MapStateToProps(state) {\n  return {\n    user: state.user,\n    articles: state.articles,\n    comments: state.comments\n  };\n}\n\nUserPage.defaultProps = {\n  user: {},\n  articles: [],\n  comments: []\n};\nUserPage.propTypes = {\n  user: PropTypes.object,\n  articles: PropTypes.array,\n  comments: PropTypes.array,\n  fetchUser: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired\n};\nexport default connect(MapStateToProps, mapDispatchToProps)(UserPage);","map":{"version":3,"sources":["/Users/joanneimlay/Projects/NCNews-FE/src/components/pages/UserPage.js"],"names":["React","PropTypes","connect","actions","Profile","UserPage","Component","componentDidMount","props","fetchUser","match","params","user_id","fetchArticlesByUser","fetchCommentsByUser","render","user","mapDispatchToProps","dispatch","id","MapStateToProps","state","articles","comments","defaultProps","propTypes","object","array","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,OAA7C;AACA,SAAKJ,KAAL,CAAWK,mBAAX,CAA+B,KAAKL,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,OAAvD;AACA,SAAKJ,KAAL,CAAWM,mBAAX,CAA+B,KAAKN,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,OAAvD;AACD;;AAEDG,EAAAA,MAAM,GAAI;AACR,WACE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWQ,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAXoC;;AAcvC,SAASC,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAO;AACLT,IAAAA,SAAS,EAAGU,EAAD,IAAQ;AACjBD,MAAAA,QAAQ,CAACf,OAAO,CAACM,SAAR,CAAkBU,EAAlB,CAAD,CAAR;AACD,KAHI;AAILN,IAAAA,mBAAmB,EAAGM,EAAD,IAAQ;AAC3BD,MAAAA,QAAQ,CAACf,OAAO,CAACU,mBAAR,CAA4BM,EAA5B,CAAD,CAAR;AACD,KANI;AAOLL,IAAAA,mBAAmB,EAAGK,EAAD,IAAQ;AAC3BD,MAAAA,QAAQ,CAACf,OAAO,CAACW,mBAAR,CAA4BK,EAA5B,CAAD,CAAR;AACD;AATI,GAAP;AAWD;;AAED,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLL,IAAAA,IAAI,EAAEK,KAAK,CAACL,IADP;AAELM,IAAAA,QAAQ,EAAED,KAAK,CAACC,QAFX;AAGLC,IAAAA,QAAQ,EAAEF,KAAK,CAACE;AAHX,GAAP;AAKD;;AAEDlB,QAAQ,CAACmB,YAAT,GAAwB;AACtBR,EAAAA,IAAI,EAAE,EADgB;AAEtBM,EAAAA,QAAQ,EAAE,EAFY;AAGtBC,EAAAA,QAAQ,EAAE;AAHY,CAAxB;AAMAlB,QAAQ,CAACoB,SAAT,GAAqB;AACjBT,EAAAA,IAAI,EAAEf,SAAS,CAACyB,MADC;AAEjBJ,EAAAA,QAAQ,EAAErB,SAAS,CAAC0B,KAFH;AAGjBJ,EAAAA,QAAQ,EAAEtB,SAAS,CAAC0B,KAHH;AAIjBlB,EAAAA,SAAS,EAAER,SAAS,CAAC2B,IAAV,CAAeC,UAJT;AAKjBnB,EAAAA,KAAK,EAAET,SAAS,CAACyB,MAAV,CAAiBG;AALP,CAArB;AAQA,eAAe3B,OAAO,CAACkB,eAAD,EAAkBH,kBAAlB,CAAP,CAA8CZ,QAA9C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/actions';\nimport Profile from '../organisms/Profile';\n\nclass UserPage extends React.Component {\n  componentDidMount () {\n    this.props.fetchUser(this.props.match.params.user_id);\n    this.props.fetchArticlesByUser(this.props.match.params.user_id);\n    this.props.fetchCommentsByUser(this.props.match.params.user_id);\n  }\n\n  render () {\n    return (\n      <Profile user={this.props.user} />\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    fetchUser: (id) => {\n      dispatch(actions.fetchUser(id));\n    },\n    fetchArticlesByUser: (id) => {\n      dispatch(actions.fetchArticlesByUser(id));\n    },\n    fetchCommentsByUser: (id) => {\n      dispatch(actions.fetchCommentsByUser(id));\n    }\n  };\n}\n\nfunction MapStateToProps (state) {\n  return {\n    user: state.user,\n    articles: state.articles,\n    comments: state.comments\n  };\n}\n\nUserPage.defaultProps = {\n  user: {},\n  articles: [],\n  comments: []\n}\n\nUserPage.propTypes = {\n    user: PropTypes.object,\n    articles: PropTypes.array,\n    comments: PropTypes.array,\n    fetchUser: PropTypes.func.isRequired,\n    match: PropTypes.object.isRequired\n};\n\nexport default connect(MapStateToProps, mapDispatchToProps) (UserPage);\n"]},"metadata":{},"sourceType":"module"}