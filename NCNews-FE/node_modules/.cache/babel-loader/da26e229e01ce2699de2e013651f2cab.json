{"ast":null,"code":"var _jsxFileName = \"/Users/joanneimlay/Projects/ncnews-fe-new/src/components/pages/ArticlePage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ArticleTitleBar from '../atoms/ArticleTitleBar';\nimport ArticleText from '../atoms/ArticleText';\nimport VoteButton from '../VoteButton';\nimport NewComment from '../NewComment';\nimport CommentList from './CommentList';\nimport Byline from '../molecules/Byline';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/actions';\nimport '../../style.css';\nconst Article = styled.article`\n  background-color: #fff;\n  padding: 1rem;\n\n  h2, p {\n    margin: 0;\n  }\n`;\n\nclass ArticlePage extends React.Component {\n  componentDidMount() {\n    this.props.fetchArticlesByID(this.props.match.params.article_id);\n    this.props.fetchCommentsByArticleID(this.props.match.params.article_id);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.selectedArticle.created_by !== this.props.selectedArticle.created_by;\n  }\n\n  componentDidUpate() {\n    console.log('updated author:', this.props.selectedArticle.created_by);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Article, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(ArticleTitleBar, {\n      title: this.props.selectedArticle.title,\n      author: this.props.selectedArticle.created_by,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Byline, {\n      authorUsername: this.props.selectedArticle.created_by,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(ArticleText, {\n      body: this.props.selectedArticle.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"voteAndComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(VoteButton, {\n      votes: this.props.selectedArticle.votes,\n      id: this.props.match.params.article_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(NewComment, {\n      postComment: this.props.addCommentsByArticleID,\n      article_id: this.props.match.params.article_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(CommentList, {\n      selectedComments: this.props.selectedComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchArticlesByID: id => {\n      dispatch(actions.fetchArticlesByID(id));\n    },\n    fetchCommentsByArticleID: id => {\n      dispatch(actions.fetchCommentsByArticleID(id));\n    },\n    addCommentsByArticleID: (id, data) => {\n      dispatch(actions.addCommentsByArticleID(id, data));\n    }\n  };\n}\n\nfunction MapStateToProps(state) {\n  return {\n    selectedArticle: state.selectedArticle,\n    selectedComments: state.selectedComments\n  };\n}\n\nArticlePage.defaultProps = {\n  selectedArticle: {},\n  selectedComments: []\n};\nArticlePage.propTypes = {\n  selectedArticle: PropTypes.object,\n  selectedComments: PropTypes.array,\n  fetchArticlesByID: PropTypes.func.isRequired,\n  fetchCommentsByArticleID: PropTypes.func.isRequired,\n  addCommentsByArticleID: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired\n};\nexport default connect(MapStateToProps, mapDispatchToProps)(ArticlePage);","map":{"version":3,"sources":["/Users/joanneimlay/Projects/ncnews-fe-new/src/components/pages/ArticlePage.js"],"names":["React","PropTypes","styled","ArticleTitleBar","ArticleText","VoteButton","NewComment","CommentList","Byline","connect","actions","Article","article","ArticlePage","Component","componentDidMount","props","fetchArticlesByID","match","params","article_id","fetchCommentsByArticleID","shouldComponentUpdate","nextProps","selectedArticle","created_by","componentDidUpate","console","log","render","title","body","votes","addCommentsByArticleID","selectedComments","mapDispatchToProps","dispatch","id","data","MapStateToProps","state","defaultProps","propTypes","object","array","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ArticleTitleBar from '../atoms/ArticleTitleBar';\nimport ArticleText from '../atoms/ArticleText';\nimport VoteButton from '../VoteButton';\nimport NewComment from '../NewComment';\nimport CommentList from './CommentList';\nimport Byline from '../molecules/Byline';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/actions';\nimport '../../style.css';\n\nconst Article = styled.article`\n  background-color: #fff;\n  padding: 1rem;\n\n  h2, p {\n    margin: 0;\n  }\n`;\n\nclass ArticlePage extends React.Component {\n  componentDidMount () {\n    this.props.fetchArticlesByID(this.props.match.params.article_id);\n    this.props.fetchCommentsByArticleID(this.props.match.params.article_id);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.selectedArticle.created_by !== this.props.selectedArticle.created_by;\n  }\n\n  componentDidUpate() {\n    console.log('updated author:', this.props.selectedArticle.created_by);\n  }\n\n  render () {\n    return (\n      <div>\n        <Article>\n          <ArticleTitleBar \n            title={this.props.selectedArticle.title}\n            author={this.props.selectedArticle.created_by} \n          />\n          <Byline authorUsername={this.props.selectedArticle.created_by} />\n          <ArticleText \n            body={this.props.selectedArticle.body} \n          />\n        </Article>\n          <hr />\n          <div className=\"voteAndComment\">\n            <VoteButton \n              votes={this.props.selectedArticle.votes} \n              id={this.props.match.params.article_id}\n            />\n            <NewComment \n              postComment={this.props.addCommentsByArticleID}\n              article_id={this.props.match.params.article_id} \n            />\n          </div>\n          <hr />\n            <CommentList \n              selectedComments={this.props.selectedComments} \n            />               \n        </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    fetchArticlesByID: (id) => {\n      dispatch(actions.fetchArticlesByID(id));\n    },\n    fetchCommentsByArticleID: (id) => {\n      dispatch(actions.fetchCommentsByArticleID(id));  \n    },\n    addCommentsByArticleID: (id, data) => {\n        dispatch(actions.addCommentsByArticleID(id, data));\n    }\n  };\n}\n\nfunction MapStateToProps (state) {\n  return {\n    selectedArticle: state.selectedArticle,\n    selectedComments: state.selectedComments\n  };\n}\n\nArticlePage.defaultProps = {\n  selectedArticle: {},\n  selectedComments: []\n}\n\nArticlePage.propTypes = {\n    selectedArticle: PropTypes.object,\n    selectedComments: PropTypes.array,\n    fetchArticlesByID: PropTypes.func.isRequired,\n    fetchCommentsByArticleID: PropTypes.func.isRequired,\n    addCommentsByArticleID: PropTypes.func.isRequired,\n    match: PropTypes.object.isRequired\n};\n\nexport default connect(MapStateToProps, mapDispatchToProps) (ArticlePage);\n"]},"metadata":{},"sourceType":"module"}