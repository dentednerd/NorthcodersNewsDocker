{"ast":null,"code":"var _jsxFileName = \"/Users/joanneimlay/Projects/ncnews-fe-new/src/components/molecules/Byline.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // import styled from 'styled-components';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/actions';\n\nclass Byline extends React.Component {\n  componentDidMount() {\n    this.props.fetchUser(this.props.authorUsername);\n  }\n\n  shouldComponentUpdate() {\n    if (!this.props.author) return true;\n    return this.props.author.length > 0;\n  }\n\n  componentDidUpdate() {\n    this.props.fetchUser(this.props.authorUsername);\n  }\n\n  render() {\n    if (!this.props.author) return null;\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"written by \", React.createElement(\"a\", {\n      href: `/users/${this.props.author.username}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.props.author.name));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchUser: authorUsername => {\n      dispatch(actions.fetchUser(authorUsername));\n    }\n  };\n}\n\nfunction MapStateToProps(state) {\n  return {\n    author: state.user,\n    loading: state.loading\n  };\n}\n\nByline.defaultProps = {\n  authorUsername: \"\"\n};\nByline.propTypes = {\n  author: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  authorUsername: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  fetchUser: PropTypes.func.isRequired\n};\nexport default connect(MapStateToProps, mapDispatchToProps)(Byline);","map":{"version":3,"sources":["/Users/joanneimlay/Projects/ncnews-fe-new/src/components/molecules/Byline.js"],"names":["React","PropTypes","connect","actions","Byline","Component","componentDidMount","props","fetchUser","authorUsername","shouldComponentUpdate","author","length","componentDidUpdate","render","username","name","mapDispatchToProps","dispatch","MapStateToProps","state","user","loading","defaultProps","propTypes","oneOfType","object","array","string","bool","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,cAAhC;AACD;;AAEDC,EAAAA,qBAAqB,GAAG;AACtB,QAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,EAAwB,OAAO,IAAP;AACxB,WAAO,KAAKJ,KAAL,CAAWI,MAAX,CAAkBC,MAAlB,GAA2B,CAAlC;AACD;;AACDC,EAAAA,kBAAkB,GAAI;AACpB,SAAKN,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,cAAhC;AACD;;AAEDK,EAAAA,MAAM,GAAI;AACR,QAAI,CAAC,KAAKP,KAAL,CAAWI,MAAhB,EAAwB,OAAO,IAAP;AACxB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAc;AAAG,MAAA,IAAI,EAAG,UAAS,KAAKJ,KAAL,CAAWI,MAAX,CAAkBI,QAAS,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkD,KAAKR,KAAL,CAAWI,MAAX,CAAkBK,IAApE,CAAd,CAAP;AACD;;AAhBkC;;AAmBrC,SAASC,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAO;AACLV,IAAAA,SAAS,EAAGC,cAAD,IAAoB;AAC7BS,MAAAA,QAAQ,CAACf,OAAO,CAACK,SAAR,CAAkBC,cAAlB,CAAD,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,SAASU,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLT,IAAAA,MAAM,EAAES,KAAK,CAACC,IADT;AAELC,IAAAA,OAAO,EAAEF,KAAK,CAACE;AAFV,GAAP;AAID;;AACDlB,MAAM,CAACmB,YAAP,GAAsB;AACpBd,EAAAA,cAAc,EAAE;AADI,CAAtB;AAIAL,MAAM,CAACoB,SAAP,GAAmB;AACjBb,EAAAA,MAAM,EAAEV,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAACyB,MAAX,EAAmBzB,SAAS,CAAC0B,KAA7B,CAApB,CADS;AAEjBlB,EAAAA,cAAc,EAAER,SAAS,CAAC2B,MAFT;AAGjBN,EAAAA,OAAO,EAAErB,SAAS,CAAC4B,IAAV,CAAeC,UAHP;AAIjBtB,EAAAA,SAAS,EAAEP,SAAS,CAAC8B,IAAV,CAAeD;AAJT,CAAnB;AAOA,eAAe5B,OAAO,CAACiB,eAAD,EAAkBF,kBAAlB,CAAP,CAA8Cb,MAA9C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/actions';\n\nclass Byline extends React.Component {\n  componentDidMount () {\n    this.props.fetchUser(this.props.authorUsername);\n  }\n\n  shouldComponentUpdate() {\n    if (!this.props.author) return true;\n    return this.props.author.length > 0;\n  }\n  componentDidUpdate () {\n    this.props.fetchUser(this.props.authorUsername);\n  }\n\n  render () {\n    if (!this.props.author) return null;\n    return <p>written by <a href={`/users/${this.props.author.username}`}>{this.props.author.name}</a></p>;\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    fetchUser: (authorUsername) => {\n      dispatch(actions.fetchUser(authorUsername));\n    },\n  };\n}\n\nfunction MapStateToProps (state) {\n  return {\n    author: state.user,\n    loading: state.loading\n  };\n}\nByline.defaultProps = {\n  authorUsername: \"\"\n}\n\nByline.propTypes = {\n  author: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  authorUsername: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  fetchUser: PropTypes.func.isRequired,\n};\n\nexport default connect(MapStateToProps, mapDispatchToProps) (Byline);\n"]},"metadata":{},"sourceType":"module"}