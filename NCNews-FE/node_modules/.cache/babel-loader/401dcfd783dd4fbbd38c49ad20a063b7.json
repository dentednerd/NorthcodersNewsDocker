{"ast":null,"code":"var _jsxFileName = \"/Users/joanneimlay/Projects/NCNews-FE/src/components/pages/UserPage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/actions';\nimport Profile from '../organisms/Profile';\nimport CommentList from '../organisms/CommentList';\nimport ArticleCard from '../molecules/ArticleCard';\n\nclass UserPage extends React.Component {\n  componentDidMount() {\n    this.props.fetchAllUsers();\n    this.props.fetchArticlesByUser(this.props.match.params.user_id);\n    this.props.fetchCommentsByUser(this.props.match.params.user_id);\n  }\n\n  render() {\n    if (!this.props.articles || !this.props.selectedComments) return null;\n    const thisUser = this.props.users.filter(user => user.username === this.props.match.params.user_id)[0];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Profile, {\n      user: thisUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Articles\"), this.props.articles.map(article => React.createElement(ArticleCard, {\n      article: article,\n      key: article._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(CommentList, {\n      selectedComments: this.props.selectedComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchAllUsers: () => {\n      dispatch(actions.fetchAllUsers());\n    },\n    fetchArticlesByUser: id => {\n      dispatch(actions.fetchArticlesByUser(id));\n    },\n    fetchCommentsByUser: id => {\n      dispatch(actions.fetchCommentsByUser(id));\n    }\n  };\n}\n\nfunction MapStateToProps(state) {\n  console.log('UserPage > state', state);\n  return {\n    users: state.allUsers,\n    articles: state.articles,\n    selectedComments: state.selectedComments\n  };\n}\n\nUserPage.defaultProps = {\n  user: {},\n  articles: [],\n  selectedComments: []\n};\nUserPage.propTypes = {\n  user: PropTypes.object,\n  articles: PropTypes.array,\n  selectedComments: PropTypes.array,\n  fetchAllUsers: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired\n};\nexport default connect(MapStateToProps, mapDispatchToProps)(UserPage);","map":{"version":3,"sources":["/Users/joanneimlay/Projects/NCNews-FE/src/components/pages/UserPage.js"],"names":["React","PropTypes","connect","actions","Profile","CommentList","ArticleCard","UserPage","Component","componentDidMount","props","fetchAllUsers","fetchArticlesByUser","match","params","user_id","fetchCommentsByUser","render","articles","selectedComments","thisUser","users","filter","user","username","map","article","_id","mapDispatchToProps","dispatch","id","MapStateToProps","state","console","log","allUsers","defaultProps","propTypes","object","array","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/actions';\nimport Profile from '../organisms/Profile';\nimport CommentList from '../organisms/CommentList';\nimport ArticleCard from '../molecules/ArticleCard';\n\nclass UserPage extends React.Component {\n  componentDidMount () {\n    this.props.fetchAllUsers();\n    this.props.fetchArticlesByUser(this.props.match.params.user_id);\n    this.props.fetchCommentsByUser(this.props.match.params.user_id);\n  }\n\n  render () {\n    if (!this.props.articles || !this.props.selectedComments) return null;\n    const thisUser = this.props.users.filter(user => user.username === this.props.match.params.user_id)[0];\n    return (\n      <div>\n        <Profile user={thisUser} />\n        <h2>Articles</h2>\n        {this.props.articles.map(article => <ArticleCard article={article} key={article._id} />)}\n        <h2>Comments</h2>\n        <CommentList selectedComments={this.props.selectedComments} />\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    fetchAllUsers: () => {\n      dispatch(actions.fetchAllUsers());\n    },\n    fetchArticlesByUser: (id) => {\n      dispatch(actions.fetchArticlesByUser(id));\n    },\n    fetchCommentsByUser: (id) => {\n      dispatch(actions.fetchCommentsByUser(id));\n    }\n  };\n}\n\nfunction MapStateToProps (state) {\n  console.log('UserPage > state', state);\n  return {\n    users: state.allUsers,\n    articles: state.articles,\n    selectedComments: state.selectedComments\n  };\n}\n\nUserPage.defaultProps = {\n  user: {},\n  articles: [],\n  selectedComments: []\n}\n\nUserPage.propTypes = {\n    user: PropTypes.object,\n    articles: PropTypes.array,\n    selectedComments: PropTypes.array,\n    fetchAllUsers: PropTypes.func.isRequired,\n    match: PropTypes.object.isRequired\n};\n\nexport default connect(MapStateToProps, mapDispatchToProps) (UserPage);\n"]},"metadata":{},"sourceType":"module"}