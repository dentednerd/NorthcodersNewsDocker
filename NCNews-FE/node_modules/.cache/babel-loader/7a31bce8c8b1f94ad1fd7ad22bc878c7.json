{"ast":null,"code":"var _jsxFileName = \"/Users/joanneimlay/Projects/ncnews-fe-new/src/components/molecules/Byline.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // import styled from 'styled-components';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/actions';\n\nclass Byline extends React.Component {\n  componentDidMount() {\n    this.props.fetchUser(this.props.authorUsername);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.authorUsername !== this.props.authorUsername;\n  }\n\n  componentDidUpdate() {\n    this.props.fetchUser(this.props.authorUsername);\n  }\n\n  render() {\n    console.log('Byline > this.props.authorUsername:', this.props.authorUsername, typeof this.props.authorUsername);\n    console.log('Byline author:', this.props.author.username && this.props.author.filter(user => user.username === this.props.authorUsername), typeof this.props.author);\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"written by \", this.props.authorUsername);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchUser: authorUsername => {\n      dispatch(actions.fetchUser(authorUsername));\n    }\n  };\n}\n\nfunction MapStateToProps(state) {\n  return {\n    author: state.user,\n    loading: state.loading\n  };\n}\n\nByline.defaultProps = {\n  authorUsername: \"\"\n};\nByline.propTypes = {\n  author: PropTypes.array,\n  authorUsername: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  fetchUser: PropTypes.func.isRequired\n};\nexport default connect(MapStateToProps, mapDispatchToProps)(Byline);","map":{"version":3,"sources":["/Users/joanneimlay/Projects/ncnews-fe-new/src/components/molecules/Byline.js"],"names":["React","PropTypes","connect","actions","Byline","Component","componentDidMount","props","fetchUser","authorUsername","shouldComponentUpdate","nextProps","componentDidUpdate","render","console","log","author","username","filter","user","mapDispatchToProps","dispatch","MapStateToProps","state","loading","defaultProps","propTypes","array","string","bool","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,cAAhC;AACD;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC/B,WAAOA,SAAS,CAACF,cAAV,KAA6B,KAAKF,KAAL,CAAWE,cAA/C;AACD;;AACDG,EAAAA,kBAAkB,GAAI;AACpB,SAAKL,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,cAAhC;AACD;;AAEDI,EAAAA,MAAM,GAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmD,KAAKR,KAAL,CAAWE,cAA9D,EAA8E,OAAO,KAAKF,KAAL,CAAWE,cAAhG;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKR,KAAL,CAAWS,MAAX,CAAkBC,QAAlB,IAA8B,KAAKV,KAAL,CAAWS,MAAX,CAAkBE,MAAlB,CAAyBC,IAAI,IAAIA,IAAI,CAACF,QAAL,KAAkB,KAAKV,KAAL,CAAWE,cAA9D,CAA5D,EAA2I,OAAO,KAAKF,KAAL,CAAWS,MAA7J;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAe,KAAKT,KAAL,CAAWE,cAA1B,CAAP;AACD;;AAhBkC;;AAmBrC,SAASW,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAO;AACLb,IAAAA,SAAS,EAAGC,cAAD,IAAoB;AAC7BY,MAAAA,QAAQ,CAAClB,OAAO,CAACK,SAAR,CAAkBC,cAAlB,CAAD,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,SAASa,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLP,IAAAA,MAAM,EAAEO,KAAK,CAACJ,IADT;AAELK,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,GAAP;AAID;;AACDpB,MAAM,CAACqB,YAAP,GAAsB;AACpBhB,EAAAA,cAAc,EAAE;AADI,CAAtB;AAIAL,MAAM,CAACsB,SAAP,GAAmB;AACjBV,EAAAA,MAAM,EAAEf,SAAS,CAAC0B,KADD;AAEjBlB,EAAAA,cAAc,EAAER,SAAS,CAAC2B,MAFT;AAGjBJ,EAAAA,OAAO,EAAEvB,SAAS,CAAC4B,IAAV,CAAeC,UAHP;AAIjBtB,EAAAA,SAAS,EAAEP,SAAS,CAAC8B,IAAV,CAAeD;AAJT,CAAnB;AAOA,eAAe5B,OAAO,CAACoB,eAAD,EAAkBF,kBAAlB,CAAP,CAA8ChB,MAA9C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/actions';\n\nclass Byline extends React.Component {\n  componentDidMount () {\n    this.props.fetchUser(this.props.authorUsername);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.authorUsername !== this.props.authorUsername;\n  }\n  componentDidUpdate () {\n    this.props.fetchUser(this.props.authorUsername);\n  }\n\n  render () {\n    console.log('Byline > this.props.authorUsername:', this.props.authorUsername, typeof this.props.authorUsername);\n    console.log('Byline author:', this.props.author.username && this.props.author.filter(user => user.username === this.props.authorUsername), typeof this.props.author);\n    return <p>written by {this.props.authorUsername}</p>;\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    fetchUser: (authorUsername) => {\n      dispatch(actions.fetchUser(authorUsername));\n    },\n  };\n}\n\nfunction MapStateToProps (state) {\n  return {\n    author: state.user,\n    loading: state.loading\n  };\n}\nByline.defaultProps = {\n  authorUsername: \"\"\n}\n\nByline.propTypes = {\n  author: PropTypes.array,\n  authorUsername: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  fetchUser: PropTypes.func.isRequired,\n};\n\nexport default connect(MapStateToProps, mapDispatchToProps) (Byline);\n"]},"metadata":{},"sourceType":"module"}