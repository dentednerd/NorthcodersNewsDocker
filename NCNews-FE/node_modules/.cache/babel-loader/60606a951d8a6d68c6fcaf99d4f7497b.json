{"ast":null,"code":"var _jsxFileName = \"/Users/joanneimlay/Projects/ncnews-fe-new/src/components/pages/TopicPage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ArticleCard from '../ArticleCard';\nimport * as actions from '../../actions/actions';\n\nclass TopicPage extends React.Component {\n  componentDidMount() {\n    this.props.fetchArticles();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.match.params.topic_id), this.props.articles.filter(article => {\n      return article.belongs_to === this.props.match.params.topic_id;\n    }).map(article => React.createElement(ArticleCard, {\n      title: article.title,\n      author: article.created_by,\n      votes: article.votes,\n      key: article.title,\n      topic: article.belongs_to,\n      article_id: article._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchArticles: () => {\n      dispatch(actions.fetchArticles());\n    }\n  };\n}\n\nfunction MapStateToProps(state) {\n  return {\n    articles: state.articles,\n    loading: state.loading\n  };\n}\n\nTopicPage.propTypes = {\n  fetchArticles: PropTypes.func.isRequired,\n  articles: PropTypes.array.isRequired,\n  match: PropTypes.object.isRequired\n};\nexport default connect(MapStateToProps, mapDispatchToProps)(TopicPage);","map":{"version":3,"sources":["/Users/joanneimlay/Projects/ncnews-fe-new/src/components/pages/TopicPage.js"],"names":["React","PropTypes","connect","ArticleCard","actions","TopicPage","Component","componentDidMount","props","fetchArticles","render","match","params","topic_id","articles","filter","article","belongs_to","map","title","created_by","votes","_id","mapDispatchToProps","dispatch","MapStateToProps","state","loading","propTypes","func","isRequired","array","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,KAAL,CAAWC,aAAX;AACD;;AAEDC,EAAAA,MAAM,GAAI;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,QAA7B,CADF,EAEG,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,MAApB,CAA2BC,OAAO,IAAI;AACrC,aAAOA,OAAO,CAACC,UAAR,KAAuB,KAAKT,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,QAAtD;AACD,KAFA,EAGAK,GAHA,CAGIF,OAAO,IACV,oBAAC,WAAD;AACE,MAAA,KAAK,EAAEA,OAAO,CAACG,KADjB;AAEE,MAAA,MAAM,EAAEH,OAAO,CAACI,UAFlB;AAGE,MAAA,KAAK,EAAEJ,OAAO,CAACK,KAHjB;AAIE,MAAA,GAAG,EAAEL,OAAO,CAACG,KAJf;AAKE,MAAA,KAAK,EAAEH,OAAO,CAACC,UALjB;AAME,MAAA,UAAU,EAAED,OAAO,CAACM,GANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CAFH,CADF;AAkBD;;AAxBqC;;AA2BxC,SAASC,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAO;AACLf,IAAAA,aAAa,EAAE,MAAM;AACnBe,MAAAA,QAAQ,CAACpB,OAAO,CAACK,aAAR,EAAD,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,SAASgB,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AACLZ,IAAAA,QAAQ,EAAEY,KAAK,CAACZ,QADX;AAELa,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,GAAP;AAID;;AAEDtB,SAAS,CAACuB,SAAV,GAAsB;AACpBnB,EAAAA,aAAa,EAACR,SAAS,CAAC4B,IAAV,CAAeC,UADT;AAEpBhB,EAAAA,QAAQ,EAACb,SAAS,CAAC8B,KAAV,CAAgBD,UAFL;AAGpBnB,EAAAA,KAAK,EAAEV,SAAS,CAAC+B,MAAV,CAAiBF;AAHJ,CAAtB;AAMA,eAAe5B,OAAO,CAACuB,eAAD,EAAkBF,kBAAlB,CAAP,CAA8ClB,SAA9C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport ArticleCard from '../ArticleCard';\nimport * as actions from '../../actions/actions';\n\nclass TopicPage extends React.Component {\n  componentDidMount () {\n    this.props.fetchArticles();\n  }\n\n  render () {\n    return (\n      <div>\n        <h2>{this.props.match.params.topic_id}</h2>\n        {this.props.articles.filter(article => {\n          return article.belongs_to === this.props.match.params.topic_id;\n        })       \n        .map(article => (\n          <ArticleCard \n            title={article.title}\n            author={article.created_by}\n            votes={article.votes} \n            key={article.title}\n            topic={article.belongs_to} \n            article_id={article._id}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    fetchArticles: () => {\n      dispatch(actions.fetchArticles());\n    }\n  };\n}\n\nfunction MapStateToProps (state) {\n  return {\n    articles: state.articles,\n    loading :state.loading\n  };\n}\n\nTopicPage.propTypes = {\n  fetchArticles:PropTypes.func.isRequired,\n  articles:PropTypes.array.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default connect(MapStateToProps, mapDispatchToProps) (TopicPage);\n"]},"metadata":{},"sourceType":"module"}